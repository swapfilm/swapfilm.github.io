{"version":3,"sources":["./src/app/features/components/card-film/services/tmdb.service.ts","./src/environments/environment.ts","./src/app/features/components/card-film/card-film.component.ts","./src/app/features/components/card-film/card-film.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/features/features.module.ts","./src/app/features/features.component.ts","./src/app/features/features.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQO,MAAM,WAAW;IAEpB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAEpC,YAAO,GAAG,oCAAoC,CAAC;QAC/C,OAAE,GAAG,GAAG,GAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC;QACvD,YAAO,GAAG,2CAA2C,CAAC;QACtD,aAAQ,GAAG,iBAAiB,CAAC;IALS,CAAC;IAOvC,kBAAkB,CAAC,GAAU,EAAE,GAAU;QACrC,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IAC3C,CAAC;IAEH,QAAQ;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,EAAE,GAAC,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1E,CAAC;;sEAfQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAHR,MAAM;;;;;;;;;;;;;ACLtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,cAAc,EAAE,+CAA+C;IAC/D,MAAM,EAAE,iCAAiC;IACzC,QAAQ,EAAE,+BAA+B;IACzC,OAAO,EAAE,kCAAkC;CAC5C,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;ACV5D,MAAM,iBAAiB;IAM5B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ;QACN,IAAI,CAAC,SAAS,EAAE;IAClB,CAAC;IAED,SAAS;QACP,KAAK,CAAC,+GAA+G,CAAC;IACxH,CAAC;IAED,WAAW;QACT,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAE,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IAClE,CAAC;IAED,IAAI;QACF,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC5C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAED,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;;kFA9BU,iBAAiB;iGAAjB,iBAAiB;QCT9B,yEAAkC;QAChC,wEAAsD;QACpD,qEAAI;QACF,qEAAI;QAAA,iFAAsB;QAAA,4DAAK;QACjC,4DAAK;QACL,wEAAqB;QACnB,4EAAoE;QAAtB,yIAAS,eAAW,IAAC;QAAC,wEAAa;QAAA,4DAAS;QAC5F,4DAAK;QACP,4DAAK;QAGL,yEAAkD;QAEhD,yEAA+C;QAC7C,0EAAiB;QACf,0EAA+C;QAC7C,qEAA+G;QACjH,4DAAM;QACR,4DAAM;QAEN,0EAAwC;QACtC,2EAAyC;QACvC,0EAAuB;QAAA,wDAAe;QAAA,4DAAK;QAC3C,yEAAqB;QAAC,wDAAqB;QAAA,4DAAI;QAC/C,yEAAqB;QAAC,wDAA4C;QAAA,4DAAI;QACtE,yEAAqB;QAAC,wDAAgD;QAAA,4DAAI;QAC5E,4DAAM;QAER,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAfS,2DAAgE;QAAhE,0LAAgE;QAM9C,0DAAe;QAAf,gFAAe;QAChB,0DAAqB;QAArB,8FAAqB;QACrB,0DAA4C;QAA5C,+HAA4C;QAC5C,0DAAgD;QAAhD,gIAAgD;;;;;;;;;;;;;;;;;;;;AClBzE,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,YAAY,CAAC;KACtB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,0EAA6B;;;;;;;;;;;;;;ACA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAEE;AAGX;AACa;;AAerD,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YANJ;YACP,uEAAa;YACb,wEAAc;YACd,qEAAgB;SAEjB;mIAIU,SAAS,mBAXlB,2DAAY,aAGZ,uEAAa;QACb,wEAAc;QACd,qEAAgB;;;;;;;;;;;;;ACfpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAEV;AACgC;AACvB;AACmB;;AAepE,MAAM,cAAc;;4EAAd,cAAc;6FAAd,cAAc;kGAFZ,CAAC,qEAAgB,EAAE,uFAAW,CAAC,YANjC;YACL,4DAAY;SACf;mIAMQ,cAAc,mBAXnB,qEAAiB;QACjB,2FAAiB,aAGjB,4DAAY,aAGZ,qEAAiB;;;;;;;;;;;;;;;;;;;ACTlB,MAAM,iBAAiB;IAE5B,gBAAgB,CAAC;IAEjB,QAAQ;IAER,CAAC;;kFANU,iBAAiB;iGAAjB,iBAAiB;QCP9B,2EAA+B;;;;;;;;;;;;;;;;;;;;ACAgB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n}) \r\n\r\nexport class TmdbService{\r\n    \r\n    constructor(private http: HttpClient){}\r\n\r\n    tmdbApi = 'https://api.themoviedb.org/3/movie';\r\n    id = '/'+ Math.round(this.getRandomArbitrary(1,10000));\r\n    api_key = '?api_key=c555adc36b44e965cef4567502b1614c';\r\n    languege = '&language=pt-BR';\r\n\r\n    getRandomArbitrary(min:number, max:number) {\r\n        return Math.random() * (max - min) + min;\r\n      }\r\n\r\n    swapFilm(): Observable<any>{\r\n        return this.http.get(this.tmdbApi+this.id+this.api_key+this.languege);\r\n    }\r\n\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  placeholderImg: `../assets/img/no-image.png?text=the-challenge`,\n  imgUrl: `https://image.tmdb.org/t/p/w500`,\n  API_BASE: 'https://api.themoviedb.org/3/',\n  API_KEY: '5838a46763aeb076b4fdf8b826096225',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { TmdbService } from './services/tmdb.service';\n\n\n@Component({\n  selector: 'app-card-film',\n  templateUrl: './card-film.component.html',\n  styleUrls: ['./card-film.component.scss']\n})\nexport class CardFilmComponent implements OnInit {\n\n\n  movie: any;\n\n\n  constructor(private tmdbService: TmdbService) { }\n\n  ngOnInit(): void {\n    this.alertaBug()\n  }\n\n  alertaBug(){\n    alert('Caso seu filme não carregue, atualize a página e tente novamente. Irei resolver esse problema posteriormente.')\n  }\n\n  swapDisplay() {\n    document.getElementById(\"trocaDisplay\")!.style.display = \"flex\";\n  }\n\n  sort() {\n    this.tmdbService.swapFilm().subscribe(movie => {\n      this.movie = movie;\n    })\n  }\n\n  principal() {\n    this.tmdbService.swapFilm();\n    this.swapDisplay();\n    this.sort();\n  }\n\n\n\n}\n","<div class=\"container-fluid mt-3\">\n  <ul class=\"nav d-flex flex-column align-items-center\">\n    <li>\n      <h2>Para sortear um filme:</h2>\n    </li>\n    <li class=\"nav-item\">\n      <button class=\"bttn-unite bttn-lg bttn-royal\" (click)=\"principal()\">Clique Aqui !</button>\n    </li>\n  </ul>\n\n\n  <div class=\"d-flex justify-content-center mt-5  \">\n\n    <div class=\"card mb-3\" style=\"max-width: 50%;\">\n      <div class=\"row\">\n        <div class=\"col d-flex justify-content-center\">\n          <img [src]=\"'https://image.tmdb.org/t/p/w500/' + movie.backdrop_path\" [alt]=\"'Poster do filme ' + movie.title\">\n        </div>\n      </div>\n\n      <div class=\"col mt-3\" id=\"trocaDisplay\">\n        <div class=\"card-body\" id=\"trocaDisplay\">\n          <h5 class=\"card-title\">{{movie.title}}</h5>\n          <p class=\"card-text\"> {{ movie.overview }} </p>\n          <p class=\"card-text\"> {{ movie.runtime + ' minutos de duração' }} </p>\n          <p class=\"card-text\"> {{ 'Data de lançamento: '+movie.release_date }} </p>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'swap-films';\n}\n","<app-features></app-features>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FeaturesModule } from './features/features.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FeaturesModule,\n    HttpClientModule,\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { FeaturesComponent } from \"./features.component\";\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { CardFilmComponent } from \"./components/card-film/card-film.component\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { TmdbService } from \"./components/card-film/services/tmdb.service\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FeaturesComponent,\r\n        CardFilmComponent\r\n      ],\r\n    imports: [\r\n        CommonModule,\r\n    ],\r\n    exports: [\r\n        FeaturesComponent,\r\n    ],\r\n    providers: [HttpClientModule, TmdbService],\r\n})\r\nexport class FeaturesModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-features',\n  templateUrl: './features.component.html',\n  styleUrls: ['./features.component.scss']\n})\nexport class FeaturesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<app-card-film></app-card-film>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}